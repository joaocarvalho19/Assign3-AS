/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pa3_g22.Monitor;

import pa3_g22.Client.*;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import pa3_g22.Communication.SClient;
import pa3_g22.Communication.Message;
import javax.swing.table.DefaultTableModel;
import pa3_g22.Communication.SServer;


/**
 *
 * @author joaoc
 */
public class MonitorGUI extends javax.swing.JFrame {
    
    // Client ID
    private final long monitorId;
    
    private String LBhost = null;
    
    private int LBport = 0;
    
    private int Monitorport = 0;
    
    private SClient socketLB;
    
    // Communication Server. Basic server functions.
    private SServer server;
    
    private Monitor monitor;
    
    private int increment;
    
    /**
     * Creates new form ClientGUI
     */
    public MonitorGUI() {
        initComponents();
        this.monitorId = ProcessHandle.current().pid();
        increment = 0;
    }
    
    public void appendServer(long serverId){
        DefaultTableModel model = (DefaultTableModel) serversTable.getModel();
        model.addRow(new Object[]{serverId, "RUNNING",0});
    }
    
    public void setServerReqs(long serverId, int value){        
        DefaultTableModel model;
        model = (DefaultTableModel) serversTable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (((Long)model.getValueAt(i, 0)).equals(serverId)) {
                model.setValueAt(value, i, 2);
            }
        }
    }
    
    public void appendReplay(long requestId, int num_iterations, int deadline, String pi_value){
        DefaultTableModel model = (DefaultTableModel) repliesTable.getModel();
        model.addRow(new Object[]{requestId, num_iterations, deadline, pi_value});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        MonitorHost = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MonitorPort = new javax.swing.JTextField();
        clientStart = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        tabbledPlane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        serversTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        repliesTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        LBHost = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        LBPort = new javax.swing.JTextField();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        MonitorHost.setBackground(new java.awt.Color(255, 255, 255));
        MonitorHost.setForeground(new java.awt.Color(0, 0, 0));
        MonitorHost.setText("localhost");
        MonitorHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonitorHostActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Monitor Host:");

        jLabel2.setBackground(new java.awt.Color(51, 51, 51));
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Monitor Port:");

        MonitorPort.setBackground(new java.awt.Color(255, 255, 255));
        MonitorPort.setForeground(new java.awt.Color(0, 0, 0));
        MonitorPort.setText("2000");
        MonitorPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonitorPortActionPerformed(evt);
            }
        });

        clientStart.setBackground(new java.awt.Color(0, 0, 0));
        clientStart.setForeground(new java.awt.Color(204, 204, 204));
        clientStart.setText("START MONITOR");
        clientStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientStartActionPerformed(evt);
            }
        });

        tabbledPlane.setBackground(new java.awt.Color(255, 255, 255));
        tabbledPlane.setForeground(new java.awt.Color(51, 51, 51));

        serversTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Server ID", "State", "Total NÂº Iter"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(serversTable);

        tabbledPlane.addTab("Servers", jScrollPane1);

        repliesTable.setForeground(new java.awt.Color(0, 0, 0));
        repliesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LB Id", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(repliesTable);

        tabbledPlane.addTab("LBs", jScrollPane2);

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Monitor");

        jLabel3.setBackground(new java.awt.Color(51, 51, 51));
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("LB Host:");

        LBHost.setBackground(new java.awt.Color(255, 255, 255));
        LBHost.setForeground(new java.awt.Color(0, 0, 0));
        LBHost.setText("localhost");
        LBHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LBHostActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(51, 51, 51));
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("LB Port:");

        LBPort.setBackground(new java.awt.Color(255, 255, 255));
        LBPort.setForeground(new java.awt.Color(0, 0, 0));
        LBPort.setText("1000");
        LBPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LBPortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addComponent(tabbledPlane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MonitorHost, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LBHost, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MonitorPort, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LBPort, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clientStart)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MonitorHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(MonitorPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LBHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(LBPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(clientStart)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbledPlane, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbledPlane.getAccessibleContext().setAccessibleName("Servers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MonitorHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonitorHostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonitorHostActionPerformed

    private void MonitorPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonitorPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonitorPortActionPerformed

    private void clientStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientStartActionPerformed
        LBhost = LBHost.getText();
        LBport = Integer.parseInt(LBPort.getText());
        Monitorport = Integer.parseInt(MonitorPort.getText());
        this.server = new SServer(Monitorport);
        /*try {
            //socketClient = new SClient(LBhost, LBport);
            socketLB = new SClient(new Socket(LBhost, LBport));
            socketLB.createSocket();
            socketLB.writeObject(new Message("MONITOR", monitorId));
            //socketClient.end();
        } catch (IOException ex) {
            System.err.println(ex);
        }*/

        this.monitor = new Monitor(monitorId, this.server, socketLB, this);
        this.monitor.start();
        
        clientStart.setEnabled(false);

    }//GEN-LAST:event_clientStartActionPerformed

    private void LBHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LBHostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LBHostActionPerformed

    private void LBPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LBPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LBPortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonitorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonitorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonitorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonitorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonitorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LBHost;
    private javax.swing.JTextField LBPort;
    private javax.swing.JTextField MonitorHost;
    private javax.swing.JTextField MonitorPort;
    private javax.swing.JButton clientStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable repliesTable;
    private javax.swing.JTable serversTable;
    private javax.swing.JTabbedPane tabbledPlane;
    // End of variables declaration//GEN-END:variables
}
